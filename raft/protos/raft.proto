// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package raft;


// The generic server node definition.
service Node {
  // AppendEntriesRPC - used by leaders to add entries to the followers during normal operation and for heartbeats
  rpc AppendEntries (AppendEntryRequest) returns (AppendEntryReply) {}

  // RequestVoteRPC - used by candidates for requesting votes during an election
  rpc RequestVote (RequestVoteRequest) returns (RequestVoteReply) {}
}


// The request message for appending new log entries - to be sent from the leader to the followers
message AppendEntryRequest {
  int32 term = 1;
  int32 leaderID = 2;
  int32 prevLogIndex = 3;
  int32 prevLogTerm = 4;
  repeated string entries = 5;
  int32 leaderCommit = 6;
}


// The reply message for appending new log entries - to be sent from the followers to the leader
message AppendEntryReply {
  int32 term = 1;
  bool success = 2;
}


// The request message for requesting votes during an election - to be sent from the candidate to the followers
message RequestVoteRequest {
  int32 term = 1;
  int32 candidateID = 2;
  int32 lastLogIndex = 3;
  int32 lastLogTerm = 4;
}


// The reply message for casting votes during an election - to be sent from the followers to the candidate
message RequestVoteReply {
  int32 term = 1;
  bool voteGranted = 2;
}