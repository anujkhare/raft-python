# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import raft.protos.raft_pb2 as raft__pb2


class NodeStub(object):
  """The generic server node definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AppendEntries = channel.unary_unary(
        '/raft.Node/AppendEntries',
        request_serializer=raft__pb2.AppendEntryRequest.SerializeToString,
        response_deserializer=raft__pb2.AppendEntryReply.FromString,
        )
    self.RequestVote = channel.unary_unary(
        '/raft.Node/RequestVote',
        request_serializer=raft__pb2.RequestVoteRequest.SerializeToString,
        response_deserializer=raft__pb2.RequestVoteReply.FromString,
        )


class NodeServicer(object):
  """The generic server node definition.
  """

  def AppendEntries(self, request, context):
    """AppendEntriesRPC - used by leaders to add entries to the followers during normal operation and for heartbeats
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RequestVote(self, request, context):
    """RequestVoteRPC - used by candidates for requesting votes during an election
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_NodeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AppendEntries': grpc.unary_unary_rpc_method_handler(
          servicer.AppendEntries,
          request_deserializer=raft__pb2.AppendEntryRequest.FromString,
          response_serializer=raft__pb2.AppendEntryReply.SerializeToString,
      ),
      'RequestVote': grpc.unary_unary_rpc_method_handler(
          servicer.RequestVote,
          request_deserializer=raft__pb2.RequestVoteRequest.FromString,
          response_serializer=raft__pb2.RequestVoteReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'raft.Node', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
